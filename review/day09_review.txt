1. String 타입으로 저장할 때 실질적인 값이 들어있는 곳은 메모리 어딘가 인데.. 어딘지는 나중에 알려줌

2. 대문자로 시작하는 것들은 reference type

String, Scanner, Random
(class 배우면 이해할 수 있음)

3. 원래는 값이 흩어져 있어야 하는데 배열은 값이 일렬로 붙어있다. 

- int[] 공간이름에는 배열의 첫번째 칸의 주소가 저장이 된다. (string 과 비슷한 개념)
- 주소값을 가지고 와서 몇칸을 움직일 거냐 지정하는 것도 할 것

- int[] arr = new int[3];
=int 타입 값을 넣어줄 3칸짜리 배열을 만들어라.
한칸이 4byte 로 저장이 된다.
한칸 이동할 때마다 +4씩 추가됨
따라서, 타입에 따라 주소변동이 달라진다.
- arr[0]; 0번째 칸으로 접근해라. -> 컴퓨터는 0부터 접근!(일단)
(몇번 이동할 거냐?) 2번째칸은 1번 움직이는 거니까 arr[1]
=String next().charAt(0) 도 마찬가지
문자열로 가서 몇번 이동했는지?
-int 값을 집어넣을 3칸짜리 배열을 만들어라는 것은 한칸단 4byte 총 12바이트를 확보하라는 것과 마찬가지

= int[] a = {1,2,3};
a 라는 공간에 int 타입의 값(1,2,3)이 들어간 배열이 저장된 메모리의 첫째칸의 주소값이 들어감

배열 a의 길이는 3이다.
= a.length == 3
배열의 길이는 3이고
length라는 필드값이 있다. (필드가 뭔지는 class 진도 나갈 때 명확하게 배울것)

배열의 이름을 선언하고 나면 그 안에 기본적으로 지원되는 값이 있다.
그것을 보려면 . 을 찍으면 된다.
(~ 안에 라는 뜻)

ex) sc.next();
= sc 라는 스캐너 안에 next() 라는 메소드(기능)이 지원

배열 a를 만들면 그와 동시에 기능들이 딸려오는데 그 중의 하나가 length다.
배열의 길이를 내포하는 값(java가 지원해준 기능)

4) 배열의 인덱스 사용 범위를 벗어나면 ArrayIndexOutOfBoundsException 예외가 발생한다.
= (3칸짜리면 인덱스는 2까지만 존재한다. [] 안의 수 = 인덱스)


4. for문은 배열과 아주 밀접하게 사용이 된다. 

배열의 인덱스는 1씩 증가
for문은 자동으로 1씩 증가하게 설계

for문 출력 방식
Ex04_for_each
출력 방법 3가지 확인하기!






















