1. 내가 나를 호출하는 것 : 재귀

2. 메소드가 종료하는 2가지 조건
1) return 만났을 때
- 그 호출된 코드 시기로 돌아온다.
- 그 뒤에 실행될 코드가 없으면 main 종료
2) 안의 코드가 다 실행됐을 때

재귀는 return 을 만나지 않는 이상 무한 반복이 되기 때문에 끝나지 않으면 스택 오버 플로우 에러(stac over flow error)가 난다.

프로그램 죽는다.

따라서 재귀는 return 이 필수다.



1. 상속
java에 존재하는 모든 클래스는 object 클래스를 상속받아온다.

내 것의 일부로서 쓰는 것이다.

만드는 걸 포함해서 모든 클래스는 object 클래스를 모두 상속받는다. 모두 가지고 온다. 

object 클래스의 기능을 모두 쓸 수 있다고 생각하면 된다.

String.equals 또한 마찬가지

문자열 뿐만 아니라 모든 참조자료형은 .equals 나 toString를 쓸 수 있다.


기본구조(디폴트 아키텍쳐)



2. 메소드 오버라이드
overroding : 같은 클래스 안에서 매개변수가 다른 메소드가 존재할 수 있는 거

override : 동작되는 코드만 다르게 쓸 수 있는 것
return 타입, 매개변수, 메소드 이름은 동일

어노테이션 @Override 를 붙이면 나 오버라이드 하는 건데 (리턴타입, 매개변수, 메소드명) 에서 실수하면 좀 알려줘! 라고 해주는 역할


부모 생성자를 지칭하는 건 또 다르다. this 가 아니라 super.

생성자든 메소드든 위에 만들어둔 것을 자동으로 호출한다.



















