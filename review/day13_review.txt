1. 설계도면에 기능들이 적혀있는데
실제로 사용할 수 있는 게 아니다.
객체를 만들면 그 기능들이 활성화 돼서
실제로 사용할 수 있다.

건축도면에 방2, 거실1 이 적혀있다고 실존하는 건 아니다. 그렇지만 그 건축도면을 바탕으로 건축물을 지으면 방2, 거실1 이 존재하게 된다.
= 건축도면 = 클래스
= 건출물 = 객체

2. 객체를 만들면(new로 만든다.) 그 객체가 메모리 어딘가에 저장이 되고 그 저장된 곳의 주소값이 우리가 만들어준 공간에 저장이 된다.

3. 그 객체에 필드에 접근을 하려면 공간.(안에)필드명 으로 가라고 경로를 써준다.

4. 값을 넣어줄 수도 있고 가지고 와서 출력을 해줄 수도 있다.




---




1. 메인 클래스 : 메인 메소드가 있는 클래스
실제 객체를 만들고 실행(동작)할 코드를 작성하는 공간

2. 데이터 클래스 : 설계도면 작성하는 곳

3. 퍼블릭 클래스 : 만들어준 이름과 같은 클래스는 퍼블릭 처리가 된다.

Q. 그럼 이때까지는 메인 메소드 작성을 퍼블릭 클래스 밑에다가 해줬는데 데이터 클래스 안에도 메인 메소드를 작성해서 그 안에 메인 클래스를 만들 수 있나?




---




메소드 : 설계도에 만든다. 
1. 리턴타입 : 내뱉어줄 값의 타입
= 내뱉어줄 게 없으면 void 를 쓰면 된다.
2. 메소드이름 : 기능상자의 이름
= 개발자가 마음대로, camel case(언더바 받아줌)
3. 매개변수선언 : 밖에서 값을 받아올 게 있으면 적어주고 없으면 안해도 됨
=안 받아오면 ( ) 비워두면 됨
예를 들면 프린트!
안에 있는 값을 그냥 출력해주면 되니까
값을 받아올 필요 없는 것
4. 메소드본문 : 실행될 내용
5. 리턴 : 내뱉어주는 행위
=한번에 하나만 가능




---




클래스에 .변수 만들 수 있고(속성)
= 명사적인 느낌
.메소드() 만들 수 있다(기능)
객체. ( ) 뒤에 괄호가 붙으면 다 메소드다.
동작적인 기능을 하는 것
new 클래스명( ); 은 별개




---




클래스 없이 메소드만 만들 수 있다.
기능상자만 만들 수 있는 것.(나중 진도)


클래스는 설계도!!!!!!!!!!!!!!!!!

동작이 될 코드가 아니다!!!!!!!!!!!

앞으로 그런 기능을 실제로 만들긴 할 건데 만들어진 상태가 아니고!!!!!!!!

그 전에 이렇게 할 거다~!

라고.. 뭐랄까.. 보고서 만들고 브리핑?


메인에서 객체를 만들고 가져다 쓰고 그런 게 아니라 일단 설계하는 것
가정을 하게 된다.

= setUser 라는 기능상자는 실제로 동작을 할 때 문자열 3개를 받아와야 한다는 것을 가정한 것
= 실제로 들어온 건 아니다




---




Date 객체를 만들어주면 코드가 동작하는 순간의 날짜를 캡쳐해서 내뱉어주는 것

return 이 없으면 void
내뱉으면 return
내뱉지 않으면 void



Ex04_user
user1.userId = 필드에 직접 넣어줄 값
user1.setUser() = 값 3개를 차례로 자동으로 넣어주는 기능을 실행하는 것
user1.printUser() = 값 안에 있는 것들을 출력해주는 기능을 실행하는 것


!!!!!!!!!!!!!!!!!
1. 필드는 어쨌든 값을 저장할 공간을 만들어주는 것
2. 메소드는 하나하나 입력하지 않아도 자동으로 촤라락 실행할 동작(기능)을 미리 언급해두고 그 버튼만 딱 누르면 촤라락 실행하게끔 하는 것
3. 입력값은 사용자마다 다르기 때문에 미리 알 수 없다. 그래서 메소드는 값을 정의한 게 아니라 패턴을 정해준 것이다. 기능(실행, 동작)만 정해준 것.


3. "메소드 정의" 방법
형식
1) 리턴타입 2)메소드이름 (3)매개변수선언, ... ) {
  메소드 본문;
4) return 결과값;
}


리턴타입(없으면 void) 메소드이름(정하기 나름) (매개변수 : 사용자가 입력하는 거마다 다르게 저장되는 값){
그래서 매개변수로 실행할 것
(메인과 객체 사이에 매개가 되는 변수)
내뱉을(리턴) 결과값; (void 했으면 생략)
}

이렇게 메소드를 만들어준다.


설계는 메인에서 할 수 없다.
실행은 메인 안에서만 할 수 있다.


만든 메소드를 동작한다는 것은 안에 있는 소스코드가 차례로 실행해준다는 것(촤라락)

코드 하나하나 칠 필요없이
하나 기능만 띡 누르면 촤라락~
할 수 있는 고급기능버튼을 만들어주는 느낌 !!!! 이 메소드를 정의해준다는 것


















