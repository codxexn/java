생성자 (Constructor) : 객체를 만들어주는 역할
	// 생성과 동시에 진행해야 하는 것이 있으면 생성자 본문에 집어넣어준다.

	1. 객체(인스턴스)가 생성될 때 자동으로 호출되는 메소드이다. (그때 딱 한번 호출함)
	2. 모든 객체(인스턴스)는 생성될 때 반드시 생성자를 호출한다. (생성자를 호출하지 않는 객체(인스턴스)는 없다.)
	3. 개발자가 생성자를 만들지 않으면 아무일도 하지 않는 "디폴트 생성자"가 호출된다.
		Class Person {
			Person(){}	// 디폴트 생성자 <= 개발자가 생성자를 하나도 만들지 않으면, 이렇게 생긴 코드를 자바가 스스로 만든다.
		}
	4. 객체(인스턴스)의 필드 값의 초기화를 위해 존재한다.
	5. 객체(인스턴스) 생성 모습
		Car taxi = new Car();		-> Car() == 생성자
		Person man = new Person();	-> Person() == 생성자
		Circle hole = new Circle();	-> Circle() == 생성자
		
		소문자(); 메소드
		대문자(); 생성자
		
	6. 생성자 선언 방법
		1) 클래스 이름(2)매개변수선언){
			생성자 본문;
		}
		
		1) 클래스 이름 : 생성자의 이름은 클래스의 이름과 같다.
		2) 매개변수선언 : 경우의 수가 많기 때문에 여러 가지를 허용한다.
			-> "메소드 오버로딩" 을 통해 여러 개의 생성자가 존재할 수 있다.
			* 메소드 오버로딩 (method overloading)
			 : 이름이 같더라도 매개변수가 다르면 여러 개의 메소드가 존재할 수 있다.
		3) 리턴의 개념이 존재하지 않는다.
		= 존재의 의의는 객체를 만들어주는 역할이기 때문이다.
		= 객체의 생성과 동시에 추가적으로 진행해야 하는 것을 조금 추가(생성자 본문을 통해)할 수 있을 뿐,
		= 연산을 통해서 값을 내뱉어주는 기능상자의 역할을 하지 않기 때문이다.
		
		